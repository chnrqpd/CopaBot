name: Deploy Discord Bot

# Define quando o workflow será executado
on:
 push:
   branches: [ main ]  # Executa quando há push na branch main
 workflow_dispatch:    # Permite execução manual através da interface do GitHub

# Define as permissões necessárias para o workflow
permissions:
 contents: read
 packages: write    # Necessário para publicar no GitHub Container Registry

jobs:
 deploy:
   runs-on: ubuntu-latest
   steps:
     # Faz checkout do código do repositório para ter acesso aos arquivos
     - name: Checkout code
       uses: actions/checkout@v3

     # Configura o Docker Buildx para poder construir imagens multiplataforma
     - name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v2

     # Faz login no GitHub Container Registry para poder publicar as imagens
     - name: Login to GitHub Container Registry
       uses: docker/login-action@v2
       with:
         registry: ghcr.io
         username: ${{ github.actor }}
         password: ${{ secrets.GITHUB_TOKEN }}

     # Constrói a imagem Docker e publica no registro
     - name: Build and push Docker image
       uses: docker/build-push-action@v4
       with:
         context: .
         push: true
         tags: |
           ghcr.io/chnrqpd/copabot:latest
           ghcr.io/chnrqpd/copabot:${{ github.sha }}
         cache-from: type=gha
         cache-to: type=gha,mode=max

     # Faz o deploy da nova versão na VM Oracle
     - name: Deploy to Oracle Cloud
       uses: appleboy/ssh-action@master
       with:
         host: ${{ secrets.ORACLE_HOST }}
         username: ${{ secrets.ORACLE_USERNAME }}
         key: ${{ secrets.ORACLE_SSH_KEY }}
         script: |
           # Navega até o diretório do projeto
           cd ~/copa-bot
           
           # Puxa a nova imagem do registro
           docker pull ghcr.io/chnrqpd/copabot:latest
           
           # Para e remove o container atual se existir
           docker-compose down
           
           # Inicia o novo container com a imagem atualizada
           docker-compose up -d
           
           # Remove imagens antigas não utilizadas para liberar espaço
           docker image prune -af